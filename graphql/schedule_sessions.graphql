type ScheduleSession {
    id: ID!
    start_time: Int!
    end_time: Int!
    schedule: Schedule! @belongsTo
}

input CreateScheduleSessionInput {
    schedule: CreateScheduleSessionBelongsTo
    start_time: Int! @rules(apply: ["integer", "max:2400", "min:0"])
    end_time: Int! @rules(apply: ["integer", "max:2400", "min:0", "gt:start_time"])
}

input CreateScheduleSessionBelongsTo {
    connect: ID
    create: CreateScheduleInput
    upsert: UpsertScheduleSessionInput
    disconnect: ID
}

input UpsertScheduleSessionInput {
    id: ID
    day: Day
    class: CreateClassBelongsTo
}

input UpdateScheduleSessionInput {
    id: ID!
    start_time: Int! @rules(apply: ["integer", "max:2400", "min:0"])
    end_time: Int! @rules(apply: ["integer", "max:2400", "min:0", "gt:start_time"])
}

extend type Mutation {
    createScheduleSession(
        input: CreateScheduleSessionInput! @spread
    ): ScheduleSession! @create @canAccess(requiredRole: "admin")
    updateScheduleSession(
        input: UpdateScheduleSessionInput! @spread
    ): ScheduleSession! @update @canAccess(requiredRole: "admin")
    deleteScheduleSession(id: ID! @eq): ScheduleSession!
        @delete
        @canAccess(requiredRole: "admin")
}

extend type Query {
    ScheduleSession(id: ID! @eq): ScheduleSession! @find
}
