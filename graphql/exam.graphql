enum QuestionTypes {
    QCM @enum(value: "qcm")
    ESSAY @enum(value: "essay")
    UPLOAD @enum(value: "upload")
}

type Question {
    id: ID!
    question: String!
    type: QuestionTypes!
    answers: [String!]
    possibles: [String!]
    points: Float!
}

type Exam {
    id: ID!
    name: String!
    possible: Float!
    description: String
    qa: [Question!]
    attempts: Int!
    due_at: DateTimeTz
    publishes_at: DateTimeTz
    classCategory: ClassCategory! @belongsTo
    submittings: [StudentExam] @hasMany
    created_at: DateTimeTz
    updated_at: DateTimeTz
}

input CreateExamInput {
    classCategory: CreateClassCategoryBelongsTo
    name: String!
    possible: Float!
    description: String
    qa: [CreateQuestionInput]
    attempts: Int!
    due_at: DateTimeTz
    publishes_at: DateTimeTz
}

input CreateQuestionInput {
    question: String!
    type: QuestionTypes!
    answers: [String!]
    possibles: [String!]
    points: Float!
}

input UpdateQuestionInput {
    id: ID!
    question: String
    type: QuestionTypes
    answers: [String!]
    possibles: [String!]
    points: Float
}

input UpdateExamInput {
    id: ID!
    name: String
    possible: Float
    description: String
    qa: [UpdateQuestionInput]
    attempts: Int
    due_at: DateTimeTz
    publishes_at: DateTimeTz
}

extend type Mutation {
    createExam(input: CreateExamInput! @spread): Exam!
        @createExamValidation
    updateExam(input: UpdateExamInput! @spread): Exam!
    deleteExam(id: ID! @eq): Exam! @delete
}

extend type Query {
    exam(id: ID! @eq): Exam! @find
}
